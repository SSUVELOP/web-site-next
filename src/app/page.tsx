"use client"

import Image from 'next/image'
import Head from 'next/head'
import Header from '@components/Header'
import Nav from '@components/Nav'
import CustomLetter1 from "@components/CustomLetter1"

import { useRouter } from 'next/navigation';
import { MutableRefObject, useEffect, useRef, useState } from 'react'

import "@styles/home.css"

export interface eventInfo {
  title: string;
  image: string;
}

export default function Home() {
  const router = useRouter();

  const [eventList, setEventList] = useState<eventInfo[]>([]);
  const eventBGRef = useRef<any>();
  const eventListDivRef = useRef<any>([]);
  const eventListButtonRef = useRef<any>([]);
  // const [innerWidth, setInnerWidth] = useState(window.innerWidth);

  const getEventList = async ()=>{
    await setEventList([
      {title: '23-2 신입부원 모집', image: 'event_img/recruiting1.png'},
      {title: '2', image: 'instagram.png'},
      {title: '3', image: 'notion.png'}
    ]);
  }

  useEffect(()=>{
    if(eventList.length)
      eventBGRef.current.style.setProperty('background-image', 'url("'+eventList[0].image+'")');
  }, [eventList])

  useEffect(()=>{
    getEventList();

    const member = sessionStorage.getItem("ssuvelopAuth");
    console.log(JSON.parse(member!!));
  }, [])

  const switchEvent = (index: any)=>{
    for(let i = 0; i < eventList.length; i++) {
      eventListDivRef.current[i].classList.remove('selected');
      eventListButtonRef.current[i].classList.remove('selected');
    }
    eventListDivRef.current[index].classList.add('selected');
    eventListButtonRef.current[index].classList.add('selected');
    eventBGRef.current.style.setProperty('background-image', 'url("'+eventList[index].image+'")');
  }

  const eventListDiv = eventList.map((element, index) => {
    return (
      <div
        key={index}
        ref = {(el)=>(eventListDivRef.current[index]=el)}
        className={'event-div'+(index==0?' selected':'')}>
        <div
          className='card-img'
          style={{
            backgroundImage: 'url("'+element.image+'")'
          }}>
        </div>
        <div className='flow-text flex items-end'>
          <a className='inline-block animate'>
            {element.title}
          </a>
          <div className='fader fader-left'></div>
          <div className='fader fader-right'></div>
        </div>
      </div>
    );
  });

  const eventListButton = eventList.map((element, index) => {
    return (
      <div
        key={index}
        ref = {(el)=>(eventListButtonRef.current[index]=el)}
        className={'event-button'+(index==0?' selected':'')}
        onClick={()=>switchEvent(index)}>
      </div>
    )
  });

  return (
    <main>
      <Head>
        <title>SSU:VELOP</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* 헤더 */}
      <Header/>
      
      {/* 컨텐츠 */}
      <div className='first-content'>
        <div className='max-w-3xl flex flex-col justify-center'>
          <div className='flex w-auto justify-center mb-[4rem]'>
            <CustomLetter1 letter='s' delay='0' className='text-base font-extrabold flex flex-col'/>
            <CustomLetter1 letter='s' delay='150' className='text-base font-extrabold flex flex-col'/>
            <CustomLetter1 letter='u' delay='300' className='text-base font-extrabold flex flex-col'/>
            <CustomLetter1 letter=':' delay='450' className='text-base font-extrabold flex flex-col'/>
            <CustomLetter1 letter='v' delay='600' className='text-base font-extrabold flex flex-col'/>
            <CustomLetter1 letter='e' delay='750' className='text-base font-extrabold flex flex-col'/>
            <CustomLetter1 letter='l' delay='900' className='text-base font-extrabold flex flex-col'/>
            <CustomLetter1 letter='o' delay='1050' className='text-base font-extrabold flex flex-col'/>
            <CustomLetter1 letter='p' delay='1200' className='text-base font-extrabold flex flex-col'/>
          </div>

          <div className='flex text-2xl font-medium justify-center'>
            <div className='flex mx-5'>
              <Image
                style={{objectFit: "contain"}}
                src="/instagram.png"
                width={30}
                height={30}
                alt="Picture of the author"
              />
              <a className='m-3'>Instagram</a>
            </div>
            <div className='flex mx-5'>
              <Image
                style={{objectFit: "contain"}}
                src="/notion.png"
                width={30}
                height={30}
                alt="Picture of the author"
              />
              <a className='m-3'>Notion</a>
            </div>
          </div>
        </div>
      </div>

      {/* 이벤트 */}
      <div className='relative flex flex-col h-screen'>
        <div className='drawer-bg'></div>
        {/* 배경 */}
        <div
          ref={eventBGRef}
          className='bg-img relative'>
        </div>

        <div className='h-screen w-screen absolute flex flex-col justify-center items-center'>
          {/* 진행중 */}
          <div className='events-div'>
            {eventListDiv}
          </div>
          {/* 도넛 */}
          <div className='flex'>
            {eventListButton}
          </div>
        </div>
      </div>
      {/* 기타 */}
      <div className='relative flex flex-col h-screen bg-white items-center justify-center'>
        <div className='drawer-bg'></div>
        <a className='text-[10rem]'>
          공  백
        </a>
      </div>

      {/* 메뉴 */}
      {/* <Nav clickEvent={
        () => router.push('/game/tetris')
      } /> */}
    </main>
  );
}
